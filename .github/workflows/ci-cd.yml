name: Complete CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Tests
        run: pytest --cov=.

      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

  security:
    name: Security Scans
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # CodeQL static analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      # Dependency scan
      - name: Install Safety
        run: pip install safety

      - name: Safety Check
        run: safety check --json
        continue-on-error: true

      # Container scan (Trivy)
      - name: Trivy Scan
        uses: aquasecurity/trivy-action@v0.11.2

      # Secrets scan
      - name: TruffleHog Scan
        uses: trufflesecurity/trufflehog@main

      # Infrastructure scan (Checkov)
      - name: Checkov Scan
        uses: bridgecrewio/checkov-action@v12

  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4
      # TODO: Add your staging deployment steps here (e.g., AWS ECS, Azure, etc.)

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
    steps:
      - uses: actions/checkout@v4

      - name: Await Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}

      # TODO: Add your production deployment steps here

  monitor:
    name: Post-Deployment Monitoring
    runs-on: ubuntu-latest
    needs: [deploy-staging, deploy-production]
    steps:
      - uses: actions/checkout@v4

      - name: Health Check on Live App
        uses: jtalk/url-health-check-action@v4
        with:
          url: 'https://taskpilot.azurewebsites.net/api/health'
          max-attempts: 3
          retry-delay: 10s
          timeout: 30s
